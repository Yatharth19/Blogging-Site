require('dotenv').config();
const User = require('../models/user');
const express = require('express');
const router = express.Router();
const bcrypt = require('bcryptjs');
const jwt = require('jsonwebtoken');


const registerUser = async (req, res, next) => {
    try{
        const {name, email, password} = req.body;
        // console.log(name);
        const oldUser = await User.findOne({email: email});

        if(oldUser){
            res.status(409).json("User already exists");
        }

        const encryptedPassword = await bcrypt.hash(password, 10); 
        
        const user = await User.create({
            name, 
            email: email.toLowerCase(),
            password: encryptedPassword
        })
        
        const token = jwt.sign({
            user_id: user._id, 
            email: email,
        }, process.env.JWT_SECRET_KEY,
        {
            expiresIn: "2h"
        });

        user.token = token;
        
        res.status(201).json(user);
        next();

    }catch(err){
        console.log(err);
        throw new Error("Registeration error");
    }
};

const loginUser = async (req, res, next) => {
    try{
        const {email, password} = req.body;
        if(!email || !password){
            res.status(400).send("Please enter all the details");
        }

        const user = await User.findOne({email: email});

        if(user && await bcrypt.compare(password, user.password)){
            const token = jwt.sign({
                user_id: user._id, 
                email: email
            }, process.env.JWT_SECRET_KEY,
            {
                expiresIn: "2h"
            });
            user.token = token;
            res.status(200).send(user);
        }
        next();
    } catch(err) {
        console.log("Login error");
    }
}

// const logout = async (req, res) => {
//     const token = req.body.token;
    
// }

module.exports = {
    registerUser,
    loginUser
}